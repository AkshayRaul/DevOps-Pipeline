---
  - name: Install Java 8
    become: yes
    apt: pkg="{{ item }}" update_cache=yes
    with_items:
    - openjdk-8-jre-headless
    - openjdk-8-jdk
    - ca-certificates-java
    - jq

  - name: Add Key
    become: yes
    apt_key: 
      url: https://pkg.jenkins.io/debian/jenkins.io.key
      state: present

  - name: Add Jenkins repository
    become: yes
    apt_repository:
      repo: deb http://pkg.jenkins.io/debian binary/
      state: present
  
  - name: Apt update
    become: yes
    apt: update_cache=yes
  
  - name: Install jenkins
    become: yes
    apt: pkg=jenkins update_cache=yes

  - name: Install maven
    become: yes
    apt: pkg=maven update_cache=yes

  - name: start jenkins
    systemd:
      name: jenkins
      state: started

#### ADD WAIT CONDITION HERE 
  - name: Download Jenkins CLI
    become: yes
    get_url:
      url: http://{{jenkins_url}}:{{jenkins_http_port}}/jnlpJars/jenkins-cli.jar
      dest: /opt/
      mode: 0440
      owner: "{{jenkins_process_user}}"
      group: "{{jenkins_process_user}}"
      timeout: 10
    register: result
    
  - name: read admin pwd
    become: yes
    shell: cat /var/lib/jenkins/secrets/initialAdminPassword
    register: adminpwd

  - name: unlock and add admin user
    jenkins_script:
     script: |
      import jenkins.model.*
      import hudson.security.*
      import hudson.security.csrf.DefaultCrumbIssuer
      def instance = Jenkins.getInstance()
      def hudsonRealm = new HudsonPrivateSecurityRealm(false)
      hudsonRealm.createAccount('jenkins', '${user_pwd}')
      instance.setSecurityRealm(hudsonRealm)
      def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
      strategy.setAllowAnonymousRead(false)
      instance.setCrumbIssuer(new DefaultCrumbIssuer(false))
      instance.setAuthorizationStrategy(strategy)
      instance.save()
     args:
      user_pwd: "{{ admin_user_pass }}"
     user: admin
     password: "{{ adminpwd.stdout }}"

  - name: complete setup wizard
    jenkins_script:
     script: |
      import static jenkins.model.Jenkins.instance as jenkins
      import jenkins.install.InstallState
      if (!jenkins.installState.isSetupComplete()) {
        InstallState.INITIAL_SETUP_COMPLETED.initializeState()
      }
     user: admin
     password: "{{ adminpwd.stdout }}"

  - name: install plugin
    jenkins_plugin:
     name: "{{ item }}"
     state: latest
     url_username: admin
     url_password: "{{ adminpwd.stdout }}"
    with_items: "{{ jenkins_plugins }}"
  
  - include_tasks: settings.yml


  